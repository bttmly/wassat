// Generated by CoffeeScript 1.8.0
(function() {
  var capitalize, getProto, primitiveConstructors, toString, types, wassat;

  toString = Object.prototype.toString;

  getProto = Object.getPrototypeOf;

  capitalize = function(str) {
    return str[0].toUpperCase() + str.slice(1);
  };

  primitiveConstructors = {
    "string": String,
    "number": Number,
    "boolean": Boolean
  };

  types = {
    "[object String]": "string",
    "[object Number]": "number",
    "[object Boolean]": "boolean",
    "[object Object]": "object",
    "[object Array]": "array",
    "[object Function]": "function",
    "[object RegExp]": "regexp",
    "[object Date]": "date",
    "[object Arguments]": "arguments",
    "[object Undefined]": "undefined",
    "null": "null"
  };

  wassat = function(obj) {
    if (obj === null) {
      return "null";
    }
    return types[toString.call(obj)];
  };

  Object.keys(types).forEach(function(key) {
    var fnName, type;
    type = types[key];
    fnName = "is" + capitalize(type);
    fnName = fnName === "isRegexp" ? "isRegExp" : fnName;
    return wassat[fnName] = function(obj) {
      return wassat(obj) === type;
    };
  });

  wassat.isNil = function(obj) {
    var result;
    result = wassat(obj);
    return result === "null" || result === "undefined";
  };

  wassat.isIt = function(obj, Ctor) {
    var result;
    result = wassat(obj);
    if (result === "string" || result === "number" || result === "boolean") {
      return Ctor === primitiveConstructors[result];
    }
    return obj instanceof Ctor;
  };

  wassat.isItExactly = function(obj, Ctor) {
    var result;
    result = wassat(obj);
    if (result === "string" || result === "number" || result === "boolean") {
      return Ctor === primitiveConstructors[result];
    }
    return getProto(obj) === Ctor.prototype;
  };

  if (typeof exports === "object") {
    module.exports = wassat;
  } else {
    this.wassat = wassat;
  }

}).call(this);
